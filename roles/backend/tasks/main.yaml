- name: disabiling nodejs
  ansible.builtin.command: dnf module disable nodejs:18 -y

- name: enabiling nodejs
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: installing nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: creating user
  ansible.builtin.user:
    name: expense 
    state: present

- name: creating directory
  ansible.builtin.file:
    path: /app 
    state: directory 

- name: downloading backend zip file
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzipping backend file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: installing dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app 

- name: copying backend service file
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
  notify:
  - restarting backend
    

- name: installing mysql client
  ansible.builtin.dnf:
    name: mysql
    state: latest

- name: installing pip
  ansible.builtin.pip:
    name:
      - PyMysql
      - Cryptography
    executable: pip3.9

- name: loading schema
  community.mysql.mysql_db:
    login_host: "{{ login_host }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: import
    name: all
    target: /app/schema/backend.sql

- name: daemon reloading
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start and enable backend
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes